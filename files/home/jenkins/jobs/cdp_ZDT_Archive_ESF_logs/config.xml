<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ESF_DIR</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ESF_REPORT_FILE</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_TYPE</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_IDENTIFIER</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_OS</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:ePages-de/to-logstash.git</url>
        <credentialsId>c24e751f-8d24-4c11-b02e-a6428c3f88b7</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>to-logstash</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <quietPeriod>0</quietPeriod>
  <assignedNode>ci-vm-ui-test-007</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
# Prepare archiving of log files.
if [[ -d &quot;${WORKSPACE}/log&quot; ]] ; then rm -Rf &quot;${WORKSPACE}/log&quot; ; fi
if [[ -f &quot;${ESF_REPORT_FILE}&quot; ]] ; then mv -v &quot;${ESF_REPORT_FILE}&quot; &quot;${ESF_DIR}/log&quot;/. ; fi
mv -v &quot;${ESF_DIR}/log&quot; &quot;${WORKSPACE}&quot;/.</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
EXIT_CODE_LOGSTASH=0

if [[ -z $VERSION ]] ; then echo &apos;$VERSION is empty.&apos; ; exit 1 ; fi
if [[ -z $REPO ]] ; then echo &apos;$REPO is empty.&apos;; exit 1 ; fi
if [[ -z $ENV_TYPE ]] ; then echo &apos;$ENV_TYPE is empty.&apos; ; exit 1 ; fi
if [[ -z $ENV_IDENTIFIER ]] ; then echo &apos;$ENV_IDENTIFIER is empty.&apos; ; exit 1 ; fi
if [[ -z $ENV_OS ]] ; then echo &apos;$ENV_OS is empty.&apos; ; exit 1 ; fi

    # push the esf-test-results.json to our elasticsearch server via logstash docker container
    
    ############
    # logstash #
    ############
    
    # mount dirs
    export LS_LOG=&quot;${WORKSPACE}/log&quot;
    export LS_CONFIG=&quot;${WORKSPACE}/to-logstash/config&quot;
    
    # logstash.conf
    export LS_INPUT=&quot;log,esf&quot;
    export LS_OUTPUT=&quot;log,elasticsearch&quot;
    
    ###########
    # esf env #
    ###########
    
    # epages6
    export EPAGES_VERSION=${VERSION}
    export EPAGES_REPO_ID=${REPO}
    
    # env url to dir &quot;.../esf/.../log&quot;
    export ENV_URL=&quot;${BUILD_URL}artifact/log&quot;
    
    
    #################
    # elasticsearch #
    #################
    
    # elasticsearch connection details
    export ES_HOSTS=&quot;[ &apos;cd-vm-docker-host-001.intern.epages.de:9200&apos; ]&quot;
    export ES_USER=&quot;admin&quot;
    export ES_PASSWORD=&quot;qwert6&quot;
    
    # elasticsearch document path
    export ES_INDEX=&quot;esf-cdp-ui-tests&quot;
    
    ##########
    # docker #
    ##########
    
    # docker container settings
    export LS_DOCKER_CONTAINER=&quot;to-logstash-zdt-archive-esf-logs-${BUILD_NUMBER}&quot;
    
    # pull latest logstash image.
    set +x ; docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} -e teamorange@epages.com ; set -x
    docker pull ${TO_LOGSTASH_IMAGE_NAME}:${TO_LOGSTASH_IMAGE_TAG}
    
    # run logstash docker container
    ${WORKSPACE}/to-logstash/deploy.sh || EXIT_CODE_LOGSTASH=1

    # call chown
    sudo chown -R jenkins:jenkins &quot;${WORKSPACE}&quot; || EXIT_CODE_LOGSTASH=1

if [[ ${EXIT_CODE_LOGSTASH} -ne 0 ]] ; then exit 1 ; fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>log/**</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>sudo chown -R jenkins:jenkins &quot;${WORKSPACE}&quot;</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
      <executeOn>BOTH</executeOn>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.4"/>
  </buildWrappers>
</project>