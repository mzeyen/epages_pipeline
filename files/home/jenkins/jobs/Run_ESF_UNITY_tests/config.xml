<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;img src=&quot;http://glossi-media-us-west.s3-us-west-1.amazonaws.com/media/ff43d04e80c048958629e9fbe2c80f57hpINWL.gif&quot;/&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>URL</name>
          <description>The &lt;b&gt;http url&lt;/b&gt; of the ePages installation you want to test</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SURL</name>
          <description>The URL for the storefront of the Unity shop, e.g.http://unity-presenter-1.unity.epages.com/</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SHOP</name>
          <description>The &lt;b&gt;alias&lt;/b&gt; of the ePages shop you want to test, e.g. DemoShop.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GROUPS</name>
          <description>&lt;b&gt;One or more testgroups&lt;/b&gt; to run, e.g. SEARCH or CORE,SEARCH.</description>
          <defaultValue>UNITY</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_TYPE</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_IDENTIFIER</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_OS</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.4.3">
      <gitLabConnection>https://am-git.intern.epages.de/</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
    <EnvInjectJobProperty plugin="envinject@2.0">
      <info>
        <propertiesContent>TO_LOGSTASH_IMAGE_NAME=epages/to-logstash
TO_LOGSTASH_IMAGE_TAG=latest</propertiesContent>
        <secureGroovyScript plugin="script-security@1.27">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>upstream</name>
        <url>git@github.com:ePages-de/to-logstash.git</url>
        <credentialsId>c24e751f-8d24-4c11-b02e-a6428c3f88b7</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>upstream/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>to-logstash</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <noTags>false</noTags>
        <reference></reference>
        <depth>0</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <quietPeriod>0</quietPeriod>
  <assignedNode>esf_docker</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Validate mandatory parameters
if [[ -z $URL ]]; then
    echo -e &quot;\nError: Missing parameter for argument &apos;URL&apos;.\n&quot;
    exit 1
fi
if [[ -z $SHOP ]]; then
    echo -e &quot;\nError: Missing parameter for argument &apos;SHOP&apos;.\n&quot;
    exit 1
fi

# clean up workspace
if [[ -d esf ]] ; then sudo rm -Rf esf ; fi

mkdir esf
mkdir esf/log

#!/bin/bash

# pull latest esf image
set +x; docker login -u ${DOCKER_USERNAME} -p &quot;${DOCKER_PASSWORD}&quot; -e teamorange@epages.com; set -x
docker pull epages/esf-epages-unity:latest

# prepare and run esf
ESF_PARAMETERS=&quot;-browser chrome -groups ${GROUPS} -shop ${SHOP} -url ${URL} -surl ${SURL} -email max.mustermann@epages.com&quot;
ESF_PARAMETERS=&quot;${ESF_PARAMETERS} --csv-report log/esf-report.csv -ap 0 -sp&quot;

docker run --shm-size &quot;768M&quot; --rm --user=root -v ${WORKSPACE}/esf/log:/home/esf/esf/log -t epages/esf-epages-unity:latest ${ESF_PARAMETERS}
EXIT_CODE_ESF=&quot;$?&quot;

for RESULT_FILE in `find &quot;./log/&quot; -name &quot;emailable-report.html&quot; -type f | sort | tail -n1` ; do cp -vf &quot;$RESULT_FILE&quot; /tmp/. ; done
EXIT_CODE_LOGSTASH=0

if [[ -z $VERSION ]] ; then echo &apos;$VERSION is empty.&apos; ; fi
if [[ -z $REPO ]] ; then echo &apos;$REPO is empty.&apos; ; fi
if [[ -z $ENV_TYPE ]] ; then echo &apos;$ENV_TYPE is empty.&apos; ; fi
if [[ -z $ENV_IDENTIFIER ]] ; then echo &apos;$ENV_IDENTIFIER is empty.&apos; ; fi
if [[ -z $ENV_OS ]] ; then echo &apos;$ENV_OS is empty.&apos; ; fi

if [[ $VERSION &amp;&amp; $REPO &amp;&amp; $ENV_TYPE &amp;&amp; $ENV_IDENTIFIER &amp;&amp; $ENV_OS ]] ; then
    # push the esf-test-results.json to our elasticsearch server via logstash docker container
    
    ############
    # logstash #
    ############
    
    # mount dirs.
    export LS_LOG=&quot;$(find ${WORKSPACE} -maxdepth 3 -name &quot;log&quot; -type d)&quot;
    export LS_CONFIG=&quot;${WORKSPACE}/to-logstash/config&quot;
    
    # logstash.conf.
    export LS_INPUT=&quot;log,esf&quot;
    export LS_OUTPUT=&quot;log,elasticsearch&quot;
    
    ###########
    # esf env #
    ###########
    
    # epages6.
    export EPAGES_VERSION=${VERSION}
    export EPAGES_REPO_ID=${REPO}
    
    # env url to dir &quot;.../esf/.../log&quot;.
    export ENV_URL=&quot;${BUILD_URL}artifact/esf/${LS_LOG#*/esf/}&quot;
   
    
    #################
    # elasticsearch #
    #################
    
    # elasticsearch connection details.
    export ES_HOSTS=&quot;[ &apos;cd-vm-docker-host-001.intern.epages.de:9200&apos; ]&quot;
    export ES_USER=&quot;admin&quot;
    export ES_PASSWORD=&quot;qwert6&quot;
    
    # elasticsearch document path.
    export ES_INDEX=&quot;esf-cdp-ui-tests&quot;
    
    ##########
    # docker #
    ##########
    
    # docker container settings.
    export LS_DOCKER_CONTAINER=&quot;to-logstash-run-esf-tests-${BUILD_NUMBER}&quot;
    
    # pull latest logstash image.   
    docker pull ${TO_LOGSTASH_IMAGE_NAME}:${TO_LOGSTASH_IMAGE_TAG}
    
    # run logstash docker container
    ${WORKSPACE}/to-logstash/deploy.sh || EXIT_CODE_LOGSTASH=1

    # chown our workspace.
    sudo chown -R jenkins:jenkins &quot;${WORKSPACE}&quot; || EXIT_CODE_LOGSTASH=1
fi

if [[ ${EXIT_CODE_ESF} -ne 0 || ${EXIT_CODE_LOGSTASH} -ne 0 ]] ; then exit 1 ; fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>esf/log/**</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>sudo chown -R jenkins:jenkins &quot;${WORKSPACE}&quot;</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.5.0">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.11">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>5d80ffaa-b0af-4369-9b79-1b35557587d1</credentialsId>
          <usernameVariable>DOCKER_USERNAME</usernameVariable>
          <passwordVariable>DOCKER_PASSWORD</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
  </buildWrappers>
</project>