<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.21.1">
      <projectUrl>https://github.com/ePages-de/jenkins-rnd-pipeline/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.4.3">
      <gitLabConnection>https://am-git.intern.epages.de/</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>true</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:ePages-de/jenkins-rnd-pipeline.git</url>
        <credentialsId>d15b35b9-dc8d-44d8-94cd-22500413c51b</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/dev</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <quietPeriod>0</quietPeriod>
  <assignedNode>always_online</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>* 6-22 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.45">
      <scriptText>//Creates or updates &apos;Cartridges_pr_polling&apos; job
job(&apos;test_Cartridges_pr_polling&apos;) {
  description(&apos;This jobs represents a GitHub Pull Request trigger.&apos;)

  // disabled for testing
  disabled()

  // daysToKeep, numToKeep, artifactDaysToKeep, artifactNumToKeep
  logRotator(60, -1, -1, -1)
  label(&apos;ep-cvs&apos;)
  parameters {
    textParam(&apos;sha1&apos;)
  }  
  quietPeriod(0)
  // Lower value means higher priority. Default is 100.
  priority(200)
  concurrentBuild()
  scm {
    git {
      remote {
        name(&apos;origin&apos;) 
        github(&quot;ePages-de/Cartridges&quot;, &apos;ssh&apos;)
        refspec(&apos;+refs/pull/*:refs/remotes/origin/pr/*&apos;)
        // Credentials for &apos;jenkins-on-ep-cvs&apos;	
        credentials(&apos;d15b35b9-dc8d-44d8-94cd-22500413c51b&apos;)
      }
      branch(&apos;${sha1}&apos;)
    }
  }
  triggers {
    pullRequest {
      cron(&apos;* 6-22 * * *&apos;)
      triggerPhrase(&apos;retest this&apos;)
      onlyTriggerPhrase(false)
      useGitHubHooks(false)
      permitAll()
      autoCloseFailedPullRequests(false)
      extensions {
        commitStatus {
          context(&apos;PR test&apos;)
          triggeredStatus(&apos;Starting PR tests...&apos;)
          startedStatus(&apos;Testing Pull Request...&apos;)
          completedStatus(&apos;SUCCESS&apos;, &apos;All is well.&apos;)
          completedStatus(&apos;FAILURE&apos;, &apos;Something went wrong. Investigate!&apos;)
          completedStatus(&apos;ERROR&apos;, &apos;Something went really wrong. Investigate!&apos;)
	}
      }
    }
  }
  steps { 
    shell(&apos;&apos;&apos;echo Pull-Request-ID: ${ghprbPullId},
echo Source-Branch: ${ghprbSourceBranch},
echo Target-Branch: ${ghprbTargetBranch},
echo Pull-Request-Url: ${sha1}&apos;&apos;&apos;)
  }
  steps {
    downstreamParameterized {
      trigger(&apos;Cartridges_pr_test&apos;) { 
        block {
          failure(&apos;FAILURE&apos;)
        }
        parameters {
          predefinedProp(&apos;PR_ID&apos;, &apos;${ghprbPullId}&apos;) 
        }
      }    
    } 
  }
}

//Creates or updates a &apos;cartridges_pr_test&apos; job
workflowJob(&apos;test_Cartridges_pr_test&apos;) {
  parameters {
    textParam(&apos;PR_ID&apos;)
  }
  // daysToKeep, numToKeep, artifactDaysToKeep, artifactNumToKeep
  logRotator(60, -1, -1, -1)
  quietPeriod(0)
  definition {
    cps {
      scm {
        git {
          remote {
            name(&apos;origin&apos;)
            github(&apos;https://github.com/ePages-de/jenkins-rnd-pipeline.git&apos;, &apos;ssh&apos;)
            credentials(&apos;994c355a-d182-46a1-a5cd-04d866cca70c&apos;)
          }
          branch(&apos;dev&apos;)
          extensions {
            cleanBeforeCheckout()
            cleanAfterCheckout()
          }
        }
        script(readFileFromWorkspace(&apos;jobs/Cartridges_pr_test.groovy&apos;))
      }
    }
  }
  steps {
    downstreamParameterized {
      trigger(&apos;Run_ESF_tests&apos;) {
        block {
          failure(&apos;FAILURE&apos;)
        }
        parameters {
          predefinedProp(&apos;TARGET_DOMAIN&apos;, &apos;cd-vm-test-pr-006.epages.systems&apos;)
          predefinedProp(&apos;SHOP&apos;, &apos;DemoShop&apos;)
          predefinedProp(&apos;SHOP_DOMAIN&apos;, &apos;&apos;)
          predefinedProp(&apos;TESTGROUPS&apos;, &apos;SMOKETEST&apos;)
          predefinedProp(&apos;SITE_URL&apos;, &apos;&apos;)
          predefinedProp(&apos;STORE&apos;, &apos;&apos;)
          predefinedProp(&apos;SSL_PROXY&apos;, &apos;&apos;)
          predefinedProp(&apos;WSADMIN_PASSWORD&apos;, &apos;&apos;)
        }
      }
    }
  }
}</scriptText>
      <usingScriptText>true</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>IGNORE</removedJobAction>
      <removedViewAction>IGNORE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.4"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>