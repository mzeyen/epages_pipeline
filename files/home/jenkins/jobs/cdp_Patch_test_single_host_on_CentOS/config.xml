<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTGROUPS</name>
          <description></description>
          <defaultValue>SMOKETEST,LANGUAGE</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SHOP</name>
          <description></description>
          <defaultValue>DemoShop</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.4.3">
      <gitLabConnection>https://am-git.intern.epages.de/</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30">
      <wallDisplayName>Single host Patch Test CentOS - 01 - Patch</wallDisplayName>
    </de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.0">
      <info>
        <propertiesContent>ENV_OS=centos
ENV_TYPE=patch
ENV_IDENTIFIER=singlehost
</propertiesContent>
        <secureGroovyScript plugin="script-security@1.27">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <quietPeriod>0</quietPeriod>
  <assignedNode>cd-vm-test-patch-sh-centos-01</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Deploy epages-infra repo.
if [[ ! -d ~/epages-infra/.git ]] ; then
    cd ~
    git clone git@github.com:ePages-de/epages-infra.git
else
    cd ~/epages-infra &amp;&amp; git pull origin master
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export BUILD_ID=dontKillMe
~/epages-infra/scripts/epages/install_patch.sh -r ftp://ftp.epages.com/pub/epages/build/repo/$VERSION/latest</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export BUILD_ID=dontKillMe
/var/epages/install-additional-cartridges.sh -c ~/epages-infra/configuration/install-epages/simple/install-epages.conf
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export BUILD_ID=dontKillMe
export EXCLUDE_FILES_IN_NORMALIZE=&apos;mysql_config.txt DBSchema/GlobalVariables DBSchema/Columns DBSchema/KeyColumnUsage DBSchema/NonUniqueIndexes DBSchema/Tables XML/DemoShop XML/ShopTypes&apos;
~/epages-infra/scripts/epages/fingerprint/create_fingerprint.sh -a</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export BUILD_ID=dontKillMe
~/epages-infra/scripts/epages/fingerprint/copy_fingerprint.sh -v &quot;${VERSION}&quot; -r &quot;${REPO}&quot; -i &quot;${ENV_IDENTIFIER}&quot; -t &quot;${ENV_TYPE}&quot; -s /tmp/epages-installation-fingerprint</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
# Copy config file to correct directory
. /etc/default/epages6
cp /var/epages/conf/locales.conf $EPAGES_CONFIG/locales.conf

# Install french language pack
~/epages-infra/scripts/epages/install_language_packs.sh -l fr
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export BUILD_ID=dontKillMe
~/epages-infra/scripts/epages/configure_app_servers.sh -m 390 -n 3 -r</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &apos;We do not need running Schedulers during the UI test run.&apos;
/etc/init.d/epages6 stop_cron</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &quot;TARGET_DOMAIN=`hostname --fqdn`&quot;  &gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;TESTGROUPS=${TESTGROUPS}&quot;         &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;SHOP=${SHOP}&quot;                     &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_OS=${ENV_OS}&quot;                 &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_TYPE=${ENV_TYPE}&quot;             &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_IDENTIFIER=${ENV_IDENTIFIER}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.32">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>&quot;${WORKSPACE}/esf.properties&quot;</propertiesFile>
              <failTriggerOnMissing>true</failTriggerOnMissing>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>Run_ESF_tests</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>java.io.IOException|java.lang.NullPointerException</regexpForRerun>
      <rerunIfUnstable>true</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>180</delay>
      </delay>
      <maxSchedule>1</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.32">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>VIRTUAL_MACHINE=cd-vm-test-patch-sh-centos-01</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>cdp_Shut_down_virtual_machine</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.17.1">
      <strategy class="hudson.plugins.build_timeout.impl.ElasticTimeOutStrategy">
        <timeoutPercentage>200</timeoutPercentage>
        <numberOfBuilds>60</numberOfBuilds>
        <failSafeTimeoutDuration>false</failSafeTimeoutDuration>
        <timeoutMinutesElasticDefault>180</timeoutMinutesElasticDefault>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.4"/>
  </buildWrappers>
</project>