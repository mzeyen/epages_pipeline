<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HOSTNAME</name>
          <description></description>
          <defaultValue>http://schwarzbart.epages.systems</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description></description>
          <defaultValue>pre-release-development</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REMOTE</name>
          <description></description>
          <defaultValue>ePages-de</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTCASE</name>
          <description>Testcase has to be described in following way:&lt;br /&gt;&lt;br /&gt;
com.epages.cartridges.de_epages.shop.tests.DashboardWidgetsTest</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>QUARANTINE</name>
          <description>Check the box, if the test is in quarantine at the moment.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>STRESS</name>
          <description>Check the box to create CPU load and slow done the machine. Can be used to simulate a slow machine.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RETRY</name>
          <description>Enter a value, how often the test should be retried, maybe to provoke an error.</description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SHOPTYPE</name>
          <description>--shop-type Parameter</description>
          <defaultValue>Demo</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.4.3">
      <gitLabConnection>https://am-git.intern.epages.de/</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:${REMOTE}/esf.git</url>
        <credentialsId>c24e751f-8d24-4c11-b02e-a6428c3f88b7</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <assignedNode>team-gold-demo-ms</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Remove old docker containers first
docker rmi $(docker images --filter &quot;dangling=true&quot; -q --no-trunc) || true</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
sudo docker login -u ${DOCKER_USERNAME} -p &quot;${DOCKER_PASSWORD}&quot; -e teamorange@epages.com

# We want to build the ESF package first
# We have ESF checked out into $WORKSPACE
docker run --rm -t -v ${WORKSPACE}:/opt/build -v ${WORKSPACE}/esf-epages6:/opt/esf-epages6 epages/oracle-jdk8-fontconfig-freetype:latest /bin/bash -c &apos;cd /opt/build; ./gradlew clean dist sonarRunner -q; ./gradlew esfCoverageReport;&apos;
docker build -t single:testcase .

# Set the system under pressure
if(${STRESS}) ; then
	echo  &quot;Lets stress the machine!&quot;
	stress --cpu $(nproc) --vm 1 --vm-bytes 1941026 &amp;
fi

# Now run only the quarantine tests against schwarzbart.
counter=1
while [ ${counter} -le ${RETRY} ]
do
  if(${QUARANTINE}) ; then
      docker run --rm --user=root --env DBUS_SESSION_BUS_ADDRESS=/dev/null -v ${WORKSPACE}/esf/log:/home/esf/esf/log -t single:testcase -url ${HOSTNAME}/epages  -browser CHROME -ap 0 --quarantine -iw 30 -tc ${TESTCASE} --shop-type ${SHOPTYPE}
  else 
      docker run --rm --user=root --env DBUS_SESSION_BUS_ADDRESS=/dev/null -v ${WORKSPACE}/esf/log:/home/esf/esf/log -t single:testcase -url ${HOSTNAME}/epages  -browser CHROME -ap 0 -iw 30 -tc ${TESTCASE} --shop-type ${SHOPTYPE}
  fi
  counter=$((counter+1))
done

# Stop the background task for stress
if(${STRESS}) ; then
	export PROCESSES=$(ps -ax | grep &quot;[s]tress&quot; | awk &apos;{print $1}&apos;)
    for PROCESS in ${PROCESSES} ; do
    	kill ${PROCESS}
    done
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>esf/log/**</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>false</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57.2">
      <recipientList>f.ziller@epages.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.11">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>5d80ffaa-b0af-4369-9b79-1b35557587d1</credentialsId>
          <usernameVariable>DOCKER_USERNAME</usernameVariable>
          <passwordVariable>DOCKER_PASSWORD</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>