<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.4.3">
      <gitLabConnection>https://am-git.intern.epages.de/</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30">
      <wallDisplayName>Install test A-01: Single host CentOS - Install ePages</wallDisplayName>
    </de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.0">
      <info>
        <propertiesContent>URL=http://cd-vm-test-install-unity.vm-intern.epages.com/epages
SURL=http://cd-vm-test-install-unity.vm-intern.epages.com:7000/?shop=esf-test
SHOP=esf-test
GROUPS=UNITY

ENV_OS=centos7
ENV_TYPE=install
ENV_IDENTIFIER=singlehost</propertiesContent>
        <secureGroovyScript plugin="script-security@1.27">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <quietPeriod>0</quietPeriod>
  <assignedNode>cd-vm-test-install-unity</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 1: epages-infra&quot;

if [[ ! -d ~/epages-infra/.git ]] ; then
    cd ~
    git clone git@github.com:ePages-de/epages-infra.git
else
    cd ~/epages-infra &amp;&amp; git pull origin master
fi

# Copy files from ~/epages-infra/configuration/yum.repos.d to /etc/yum.repos.d
~/epages-infra/scripts/centos/update-centos-mirrors.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 2: jenkins-installs-epages.sh -i simple/install-epages-unity.conf -r ftp://ftp.epages.com/pub/epages/build/repo/$VERSION/latest&quot;

export BUILD_ID=dontKillMe
~/epages-infra/scripts/epages/jenkins-installs-epages.sh -i simple/install-epages-unity.conf -r ftp://ftp.epages.com/pub/epages/build/repo/$VERSION/latest
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 3: Setup unity to us SSL&quot;

export BUILD_ID=dontKillMe

# copy certificates
curl http://am-vm-intranet.intern.epages.de/AM/certificates/_.intern.epages.de/_.intern.epages.de.crt | tee /etc/apache2-epages/ssl.crt/unity.crt &gt; /etc/apache2-epages/ssl.crt/server.crt
curl http://am-vm-intranet.intern.epages.de/AM/certificates/_.intern.epages.de/_.intern.epages.de.key | tee /etc/apache2-epages/ssl.key/unity.key &gt; /etc/apache2-epages/ssl.key/server.key
curl http://am-vm-intranet.intern.epages.de/AM/certificates/_.intern.epages.de/ca.crt &gt; /etc/apache2-epages/ssl.crt/ca.crt

# Change /etc/default/epages6
sed -i &quot;s/^HTTPD_OPTS=.*/HTTPD_OPTS=&apos;-DSSL -DVHOSTS_NAME -DUNITY_VHOST&apos;/&quot; /etc/default/epages6

service epages6 start
service epages6 start_java</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 4: create shops&quot;

#export BUILD_ID=dontKillMe
. /etc/default/epages6

CREATE_SHOP=/srv/epages/eproot/Cartridges/DE_EPAGES/ShopConfiguration/Scripts/createShop.pl
SET_PL=/srv/epages/eproot/Cartridges/DE_EPAGES/Object/Scripts/set.pl
for shop in testshopunity esf-test ; do
  echo $PERL $CREATE_SHOP -wsuser Providers/Distributor/Users/admin -passwd admin -shoptype UnityDE -storename Store -alias $shop -scriptname $shop
  $PERL $CREATE_SHOP -wsuser Providers/Distributor/Users/admin -passwd admin -shoptype UnityDE -storename Store -alias $shop -scriptname $shop || exit 1
  echo $PERL $SET_PL -storename Store -path /Shops/$shop MailFrom=m.zeyen@epages.com
  $PERL $SET_PL -storename Store -path /Shops/$shop MailFrom=m.zeyen@epages.com
done
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 5: create_fingerprint.sh -a&quot;

export BUILD_ID=dontKillMe
export EXCLUDE_FILES_IN_NORMALIZE=&apos;XML/ShopTypes&apos;
~/epages-infra/scripts/epages/fingerprint/create_fingerprint.sh -a</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;SNIPPET 6: copy_fingerprint.sh -v $VERSION -r $REPO -i unity -t install&quot;

export BUILD_ID=dontKillMe
~/epages-infra/scripts/epages/fingerprint/copy_fingerprint.sh -v $VERSION -r $REPO -i unity -t install -s /tmp/epages-installation-fingerprint</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &quot;SNIPPET 7: create ${WORKSPACE}/esf.properties&quot;

echo &quot;GROUPS=${GROUPS}&quot; &gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;SHOP=${SHOP}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;URL=${URL}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;SURL=${SURL}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_OS=${ENV_OS}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_TYPE=${ENV_TYPE}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;
echo &quot;ENV_IDENTIFIER=${ENV_IDENTIFIER}&quot; &gt;&gt; &quot;${WORKSPACE}/esf.properties&quot;</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.32">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>${WORKSPACE}/esf.properties</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <projects>Run_ESF_UNITY_tests</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>(java.io.IOException|java.lang.NullPointerException|offline)</regexpForRerun>
      <rerunIfUnstable>true</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>180</delay>
      </delay>
      <maxSchedule>0</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.32">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>VIRTUAL_MACHINE=cd-vm-test-install-unity
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>cdp_Shut_down_virtual_machine</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.4"/>
  </buildWrappers>
</project>